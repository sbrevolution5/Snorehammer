@using Snorehammer.Web.FrontendModels
@* Needs a color and image file  *@
@*Temporarily just using a text result*@
@if (die.ConstantDisplay)
{
    <RadzenCard class=@($"rz-p-1 rz-m-1 rz-text-align-center") style="height: 40px; width: 40px;">
        + @value
    </RadzenCard>
}
else
{

    <RadzenCard class=@($"{colorCode} rz-p-1 rz-m-1 rz-text-align-center") style="height: 40px; width: 40px;">
        @value
    </RadzenCard>
}
@code {
    [Parameter]
    public Dice die { get; set; }
    [Parameter]
    public bool CriticalMatters { get; set; } = false;
    public int value { get; set; }
    private string colorCode { get; set; } = "#000";
    protected override Task OnInitializedAsync()
    {
        value = die.Result;
        colorCode = SetColorCode();
        return base.OnInitializedAsync();
    }
    private string SetColorCode()
    {
        if (die.Result > die.Sides)
        {
            return "rz-background-color-success-light rz-color-on-success-light";
        }
        else if (die.Critical && CriticalMatters)
        {
            return "rz-background-color-info rz-color-on-info";
        }
        else if (die.Success)
        {
            return "rz-background-color-success rz-color-on-success";
        }
        else
        {
            return "rz-background-color-danger rz-color-on-danger";
        }
    }
}
