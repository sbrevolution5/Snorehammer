@using Snorehammer.Web.Components.Simulation.DiceRoller
@using Snorehammer.Web.FrontendModels
@using Snorehammer.Web.Services

<RadzenTable GridLines="DataGridGridLines.Both" AllowAlternatingRows="true">
    <RadzenTableHeader>
        <RadzenTableHeaderRow>
            <RadzenTableHeaderCell>
                Stat
            </RadzenTableHeaderCell>
            <RadzenTableHeaderCell>
                Fight 1
            </RadzenTableHeaderCell>
            @if (sim2 is not null)
            {
                <RadzenTableHeaderCell>
                    Fight 2
                </RadzenTableHeaderCell>
            }
        </RadzenTableHeaderRow>
    </RadzenTableHeader>
    <RadzenTableBody>
        <RadzenTableRow>
            <RadzenTableCell>
                Attacks Made
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.AttackNumber
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.AttackNumber, sim2.AttackNumber)">
                    @sim.AttackNumber
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.AttackNumber, sim.AttackNumber)">
                    @sim2.AttackNumber
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Attacks Hit
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.AttacksHit
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.AttacksHit, sim2.AttacksHit)">
                    @sim.AttacksHit
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.AttacksHit, sim.AttacksHit)">
                    @sim2.AttacksHit
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Wounds inflicted
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.WoundsInflicted
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.WoundsInflicted, sim2.WoundsInflicted)">
                    @sim.WoundsInflicted
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.WoundsInflicted, sim.WoundsInflicted)">
                    @sim2.WoundsInflicted
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Armor Saves Failed
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.ArmorSavesFailed
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.ArmorSavesFailed, sim2.ArmorSavesFailed)">
                    @sim.ArmorSavesFailed
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.ArmorSavesFailed, sim.ArmorSavesFailed)">
                    @sim2.ArmorSavesFailed
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Damage Applied
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.DamageNumber
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.DamageNumber, sim2.DamageNumber)">
                    @sim.DamageNumber
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.DamageNumber, sim.DamageNumber)">
                    @sim2.DamageNumber
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Feel No Pain Successful
            </RadzenTableCell>

            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.FeelNoPainMade
                </RadzenTableCell>  
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.FeelNoPainMade, sim2.FeelNoPainMade)">
                    @sim.FeelNoPainMade
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.FeelNoPainMade, sim.FeelNoPainMade)">
                    @sim2.FeelNoPainMade
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Models Destroyed
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.ModelsDestroyed
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.ModelsDestroyed, sim2.ModelsDestroyed)">
                    @sim.ModelsDestroyed
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.ModelsDestroyed, sim.ModelsDestroyed)">
                    @sim2.ModelsDestroyed
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Fights Where Unit destroyed
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.UnitEntirelyDestroyed
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.UnitEntirelyDestroyed, sim2.UnitEntirelyDestroyed)">
                    @sim.UnitEntirelyDestroyed
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.UnitEntirelyDestroyed, sim.UnitEntirelyDestroyed)">
                    @sim2.UnitEntirelyDestroyed
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Fights Where Unit Left at Half or less
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.HalfOrLess
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.HalfOrLess, sim2.HalfOrLess)">
                    @sim.HalfOrLess
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.HalfOrLess, sim.HalfOrLess)">
                    @sim2.HalfOrLess
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Fights Where Unit Damaged
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.UnitDamaged
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.UnitDamaged, sim2.UnitDamaged)">
                    @sim.UnitDamaged
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.UnitDamaged, sim.UnitDamaged)">
                    @sim2.UnitDamaged
                </RadzenTableCell>
            }
        </RadzenTableRow>
        <RadzenTableRow>
            <RadzenTableCell>
                Fights Where Unit Lost A Model
            </RadzenTableCell>
            @if (sim2 is null)
            {
                <RadzenTableCell>
                    @sim.LostAModel
                </RadzenTableCell>
            }
            else
            {
                <RadzenTableCell class="@ConditionalClassList(sim.LostAModel, sim2.LostAModel)">
                    @sim.LostAModel
                </RadzenTableCell>
                <RadzenTableCell class="@ConditionalClassList(sim2.LostAModel, sim.LostAModel)">
                    @sim2.LostAModel
                </RadzenTableCell>
            }
        </RadzenTableRow>
        @* <RadzenTableRow>
            <RadzenTableCell>
                Fights Where Attacker Died on fightback
            </RadzenTableCell>
            <RadzenTableCell>
                Value
            </RadzenTableCell>
            @if (sim2 is not null)
            {
                <RadzenTableCell>
                    @sim2.ModelsDestroyed
                </RadzenTableCell>
            }
        </RadzenTableRow> *@

    </RadzenTableBody>
</RadzenTable>
@code{
    [Parameter]
    public MultiFightSimulation sim { get; set; }
    [Parameter]
    public MultiFightSimulation sim2 { get; set; } = null;
    private string ConditionalClassList(float thisSim, float OtherSim)
    {
        if (thisSim>OtherSim)
        {
            return "bg-success";
        }
        else if (thisSim < OtherSim)
        {
            return "bg-danger";
        }
        else
        {
            return "";
        }
    }
}