@using Snorehammer.Web.FrontendModels;
@using Snorehammer.Web.FrontendModels.Simulations
@using Snorehammer.Web.FrontendModels.Stats
@if (comparisonStats is not null)
{

    <StatsDataGrid stats="@comparisonStats" />
    if (comparison.MeleeFightBack)
    {
        <StatsDataGrid stats="@fightBackComparisonStats"/> 
    }
}

@code {
    [Parameter]
    public Comparison comparison { get; set; }
    public DataGridStats comparisonStats { get; set; } = new DataGridStats();
    public DataGridStats fightBackComparisonStats { get; set; } = new DataGridStats();
    protected override async Task OnInitializedAsync()
    {
        comparisonStats.List.Clear();
        fightBackComparisonStats.List.Clear();
        @if (comparison.Simulation1.Rounds >= 1)
        {
            StatsFromComparisonSim(comparison.Simulation1);
            @if (comparison.ComparingAttackers)
            {
                StatsFromComparisonSim(comparison.AlternateAttackSimulation);
            }
            else if (comparison.ComparingDefenders)
            {
                StatsFromComparisonSim(comparison.AlternateDefenseSimulation);
            }
        }
    }
    public void StatsFromComparisonSim(MultiFightSimulation sim)
    {
        comparisonStats.List.Add(sim.Stats);
        comparisonStats.ShowFnp = sim.Defender.FeelNoPain;
        comparisonStats.ShowMultiAttack = sim.Attacker.Attacks.Any(a => a.IsVariableAttacks);
        comparisonStats.MultiRound = comparison.Simulation1.Rounds > 1;
        if (comparison.MeleeFightBack)
        {
            sim.FightBackStats.ColumnName = $"{sim.Defender.Name} vs. {sim.Attacker.Name}";
            fightBackComparisonStats.List.Add(sim.FightBackStats);
            fightBackComparisonStats.ShowFnp = sim.Attacker.FeelNoPain;
            fightBackComparisonStats.ShowMultiAttack = sim.Defender.Attacks.Any(a => a.IsVariableAttacks);
            fightBackComparisonStats.MultiRound = comparison.Simulation1.Rounds > 1;
        }
    }
    
}
