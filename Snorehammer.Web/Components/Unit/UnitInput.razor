@using Snorehammer.Web.FrontendModels
@using Snorehammer.Web.FrontendModels.Profiles
@using Snorehammer.Web.Services
@if (loaded == true)
{
    <RadzenCard Variant="Variant.Outlined">

        <EditForm Model="@Unit">
            <RadzenRow>
                <RadzenSelectBar Size="ButtonSize.Small" @bind-Value="@Unit.Type">
                    <Items>
                        <RadzenSelectBarItem Value="UnitType.Infantry" Text="Infantry"></RadzenSelectBarItem>
                        <RadzenSelectBarItem Value="UnitType.Vehicle" Text="Vehicle"></RadzenSelectBarItem>
                        <RadzenSelectBarItem Value="UnitType.Monster" Text="Monster"></RadzenSelectBarItem>
                        <RadzenSelectBarItem Value="UnitType.Mounted" Text="Mounted"></RadzenSelectBarItem>
                        <RadzenSelectBarItem Value="UnitType.Swarm" Text="Swarm"></RadzenSelectBarItem>
                        <RadzenSelectBarItem Value="UnitType.Beast" Text="Beast"></RadzenSelectBarItem>
                    </Items>
                </RadzenSelectBar>
            </RadzenRow>
            <RadzenRow AlignItems="AlignItems.Normal" Wrap="FlexWrap.Wrap" Gap="1rem" class="rz-p-sm-12">
                <RadzenColumn Size="12" SizeMD="6" SizeLG="6">
                    <RadzenStack>
                        <RadzenFormField Text="Name" Variant="Variant.Flat">
                            <RadzenTextBox @bind-Value="Unit.Name" />
                        </RadzenFormField>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="4" SizeLG="2">
                    <RadzenStack>
                        <RadzenFormField Text="Saving Throw" Variant="Variant.Flat">
                            <RadzenNumeric @bind-Value="Unit.MinimumSave" />
                        </RadzenFormField>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="4" SizeLG="2">
                    <RadzenRow>
                        <RadzenCheckBox @bind-Value=@Unit.HasInvulnerableSave Name="HasInvuln" />
                        <RadzenLabel Text="Invulnerable Save" Component="HasInvuln" class="rz-ms-2" />
                    </RadzenRow>
                    <RadzenStack>
                        <RadzenFormField Text="Invulnerable Save" Variant="Variant.Flat">
                            <RadzenNumeric @bind-Value="Unit.InvulnerableSave" Disabled="@Unit.HasInvulnerableSave" />
                        </RadzenFormField>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="4" SizeLG="2">
                    <RadzenStack>
                        <RadzenFormField Text="Toughness" Variant="Variant.Flat">
                            <RadzenNumeric @bind-Value="Unit.Toughness" />
                        </RadzenFormField>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="4" SizeLG="2">
                    <RadzenStack>
                        <RadzenFormField Text="Model Wounds" Variant="Variant.Flat">
                            <RadzenNumeric @bind-Value="Unit.Wounds" />
                        </RadzenFormField>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="4" SizeLG="2">
                    <RadzenStack>
                        <RadzenFormField Text="Number of Models" Variant="Variant.Flat">
                            <RadzenNumeric @bind-Value="Unit.ModelCount" />
                        </RadzenFormField>
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>
            <RadzenPanel AllowCollapse="true" class="rz-my-10 rz-mx-auto">
                <HeaderTemplate>
                    <RadzenText TextStyle="TextStyle.H6" class="rz-display-flex rz-align-items-center rz-m-0">
                        <RadzenIcon Icon="account_box" class="rz-me-1" /><b>Abilities</b>
                    </RadzenText>
                </HeaderTemplate>
                <ChildContent>
                    <RadzenRow AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap" Gap="1rem" class="rz-p-sm-4">
                        <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
                            <RadzenFieldset AllowCollapse="true">
                                <HeaderTemplate>
                                    <b>Hit Roll</b>
                                </HeaderTemplate>
                                <ChildContent>
                                    <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                                        <RadzenCheckBox @bind-Value=@Unit.Stealth Name="Stealth" />
                                        <RadzenLabel Text="Stealth (do not use for melee defender)" Component="Stealth" class="rz-ms-2" />
                                    </RadzenColumn>
                                    <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                                        <RadzenCheckBox @bind-Value=@Unit.Minus1Hit Name="Minus1Hit" />
                                        <RadzenLabel Text="Minus 1 to hit roll" Component="Minus1Hit" class="rz-ms-2" />
                                    </RadzenColumn>
                                </ChildContent>
                                <SummaryTemplate>
                                    @HitSummary()
                                </SummaryTemplate>
                            </RadzenFieldset>
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
                            <RadzenFieldset AllowCollapse="true">
                                <HeaderTemplate>
                                    <b>Wound Roll</b>
                                </HeaderTemplate>
                                <ChildContent>
                                    <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                                        <RadzenCheckBox @bind-Value=@Unit.Minus1Wound Name="Minus1Wound" />
                                        <RadzenLabel Text="Minus 1 to wound roll" Component="Minus1Wound" class="rz-ms-2" />
                                    </RadzenColumn>
                                    <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                                        <RadzenCheckBox @bind-Value=@Unit.MinusOneToWoundAgainstStronger Name="minus1WoundVsStronger" />
                                        <RadzenLabel Text="Minus 1 to Wound against stronger attack" Component="Minus1WoundVsStronger" class="rz-ms-2" />
                                    </RadzenColumn>
                                </ChildContent>
                                <SummaryTemplate>
                                    @WoundSummary()
                                </SummaryTemplate>
                            </RadzenFieldset>
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
                            <RadzenFieldset AllowCollapse="true">
                                <HeaderTemplate>
                                    <b>Armor Roll</b>
                                </HeaderTemplate>
                                <ChildContent>
                                    <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                                        <RadzenCheckBox @bind-Value=@Unit.ArmorReroll Name="ArmorReroll" />
                                        <RadzenLabel Text="Reroll all failed armor saves" Component="ArmorReroll" class="rz-ms-2" />
                                    </RadzenColumn>
                                    <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                                        <RadzenCheckBox @bind-Value=@Unit.Reroll1Save Name="Reroll1Save" />
                                        <RadzenLabel Text="Reroll 1s for armor saves" Component="Reroll1Save" class="rz-ms-2" />
                                    </RadzenColumn>
                                    <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                                        <RadzenCheckBox @bind-Value=@Unit.HasCover Name="HasCover" />
                                        <RadzenLabel Text="Has Cover" Component="HasCover" class="rz-ms-2" />
                                    </RadzenColumn>
                                </ChildContent>
                                <SummaryTemplate>
                                    @ArmorSummary()
                                </SummaryTemplate>
                            </RadzenFieldset>
                        </RadzenColumn>
                        @* <RadzenColumn Size="2" class="rz-p-3 rz-text-align-center">
                            <RadzenCheckBox @bind-Value=@Unit.ChargeBonus Name="ChargeBonus" />
                            <RadzenLabel Text="Charge Bonus" Component="ChargeBonus" class="rz-ms-2" />
                        </RadzenColumn> *@
                        <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                            <RadzenCheckBox @bind-Value=@Unit.FightsFirst Name="FightsFirst" />
                            <RadzenLabel Text="Fights First" Component="FightsFirst" class="rz-ms-2" />
                        </RadzenColumn>
                        <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                            <RadzenCheckBox @bind-Value=@Unit.FeelNoPain Name="FeelNoPain" />
                            <RadzenLabel Text="Feel No Pain" Component="FeelNoPain" class="rz-ms-2" />
                            <RadzenFormField Text="FNP minimum" Style="width: 100%;">
                                <RadzenNumeric @bind-Value="@Unit.FeelNoPainTarget" Disabled=!Unit.FeelNoPain />
                            </RadzenFormField>
                        </RadzenColumn>
                        <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                            <RadzenCheckBox @bind-Value=@Unit.Overwatch Name="Overwatch" />
                            <RadzenLabel Text="Overwatch mode" Component="Overwatch" class="rz-ms-2" />
                        </RadzenColumn>
                        <RadzenColumn Size="6" SizeMD="3" SizeLG="2" class="rz-p-3 rz-text-align-center">
                            <RadzenCheckBox @bind-Value=@Unit.TakesHalfDamage Name="TakesHalfDamage" />
                            <RadzenLabel Text="Takes Half Damage" Component="TakesHalfDamage" class="rz-ms-2" />
                        </RadzenColumn>

                    </RadzenRow>
                </ChildContent>
                <SummaryTemplate>
                    @AbilitySummary()
                </SummaryTemplate>
            </RadzenPanel>
            @if (Attacker)
            {
                foreach (var atk in Unit.Attacks)
                {
                    <AttackInput attack="@atk"></AttackInput>
                    @if (Unit.Attacks.Count() > 1)
                    {
                        <RadzenButton Click="() => RemoveAttack(atk)" ButtonStyle="ButtonStyle.Danger"><RadzenIcon Icon="remove" /></RadzenButton>
                    }
                }
                <RadzenButton Click="() => AddAttack()" ButtonStyle="ButtonStyle.Primary"><RadzenIcon Icon="add" /></RadzenButton>
            }
        </EditForm>
    </RadzenCard>
}

@code {
    [Parameter]
    public UnitProfile Unit { get; set; }
    [Parameter]
    public EventCallback<UnitProfile> UnitChanged { get; set; }
    private bool loaded = false;
    [Parameter] public bool Attacker { get; set; }
    public SummaryService summaryService { get; set; } = new SummaryService();

    protected override Task OnInitializedAsync()
    {
        loaded = true;
        return base.OnInitializedAsync();
    }
    public string AbilitySummary()
    {
        return summaryService.AbilitySummary(Unit);
    }
    public string HitSummary()
    {
        return summaryService.HitSummary(Unit);
    }
    public string ArmorSummary()
    {
        return summaryService.ArmorSummary(Unit);
    }
    public string WoundSummary()
    {
        return summaryService.WoundSummary(Unit);
    }
    public void AddAttack()
    {
        Unit.Attacks.Add((AttackProfile)Unit.Attacks.Last().Clone());
    }
    public void RemoveAttack(AttackProfile attack)
    {
        Unit.Attacks.Remove(attack);
    }
}
